DROP TABLE IF EXISTS USERS CASCADE;
DROP TABLE IF EXISTS FRIENDSHIP CASCADE;
DROP TABLE IF EXISTS MPA CASCADE;
DROP TABLE IF EXISTS GENRE CASCADE;
DROP TABLE IF EXISTS FILMS CASCADE;
DROP TABLE IF EXISTS FILM_GENRE CASCADE;
DROP TABLE IF EXISTS LIKES CASCADE;

CREATE TABLE IF NOT EXISTS USERS (
    USER_ID INTEGER  PRIMARY KEY,
    EMAIL CHARACTER VARYING(255) NOT NULL,
    LOGIN CHARACTER VARYING(50) NOT NULL,
    NAME CHARACTER VARYING(50) NOT NULL,
    BIRTHDAY DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS FRIENDSHIP (
    USER_ID INTEGER NOT NULL REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    FRIEND_ID INTEGER NOT NULL REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    STATUS BOOLEAN NOT NULL,
    PRIMARY KEY (USER_ID, FRIEND_ID)
);

CREATE TABLE IF NOT EXISTS MPA (
    MPA_ID INTEGER  PRIMARY KEY,
    NAME CHARACTER VARYING(50) NOT NULL UNIQUE,
    DESCRIPTION CHARACTER VARYING(100)
);

CREATE TABLE IF NOT EXISTS GENRE (
    GENRE_ID INTEGER  PRIMARY KEY,
    NAME CHARACTER VARYING(50) UNIQUE
);

CREATE TABLE IF NOT EXISTS FILMS (
    FILM_ID INTEGER  PRIMARY KEY,
    NAME CHARACTER VARYING(150) NOT NULL,
    DESCRIPTION CHARACTER VARYING(200) NOT NULL,
    RELEASE_DATE DATE NOT NULL,
    DURATION INTEGER NOT NULL,
    MPA_ID INTEGER NOT NULL REFERENCES MPA(MPA_ID) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS FILM_GENRE (
    FILM_ID INTEGER NOT NULL REFERENCES FILMS ON DELETE CASCADE,
    GENRE_ID INTEGER NOT NULL REFERENCES GENRE ON DELETE CASCADE,
    PRIMARY KEY (FILM_ID, GENRE_ID)
);

CREATE TABLE IF NOT EXISTS LIKES (
    FILM_ID INTEGER NOT NULL REFERENCES FILMS ON DELETE CASCADE,
    USER_ID INTEGER NOT NULL REFERENCES USERS ON DELETE CASCADE,
    PRIMARY KEY (FILM_ID, USER_ID)
);